/// <reference types="node" />
import tls from 'tls';
import { VNDBResponse } from './utils';
/**
 * A VNDB connection object. Uses a TLS Socket to provide the connection.
 */
declare class VNDBConnection {
    /**
     * @hidden
     * The end-of-line character
     */
    private eol;
    /** The TLS socket object */
    socket: tls.TLSSocket | undefined;
    /** A unique connection socket id */
    id: string;
    /**
     * Create a new connection object.
     */
    constructor();
    /**
     * Initialize a socket and connect it to the VNDB API
     * @param host VNDB API hostname
     * @param port VNDB API port (use the TLS port, not the TCP one)
     * @param encoding Type of encoding used
     * @return Resolves once the socket has connected to the server
     */
    connect(host: string, port: number, encoding?: string): Promise<void>;
    /**
     * Used to login to the API. It is required before sending further queries.
     * @param clientName A custom name for the client connecting to the API
     * @return Resolves once the API confirms the login
     */
    login(clientName: string): Promise<void>;
    /**
     * Used to end the connection.
     * @return Resolves once the connection is ended
     */
    disconnect(): Promise<void>;
    /**
     * Used to send a query to the VNDB API.
     * @param query A VNDB API compatible query string
     * @see {@link https://vndb.org/d11}
     * @return Resolves when the response is recieved
     */
    query(query: string): Promise<VNDBResponse>;
}
export = VNDBConnection;
